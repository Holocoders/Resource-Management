# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  _id: ID!
  createdBy: User!
  description: String
  name: String!
}

input CategoryType {
  _id: ID!
  createdBy: UserInput!
  description: String
  name: String!
}

input CreateCategoryInput {
  _id: String
  createdBy: UserInput
  description: String
  name: String!
  parent: String!
}

input CreateFacilityInput {
  _id: String
  name: String!
}

input CreateItemHistoryInput {
  cancelled: Boolean!
  currentDate: DateTime
  dueDate: DateTime
  issueDate: DateTime
  issued: Boolean!
  itemId: String!
  quantity: Float!
  status: Boolean!
  userId: String
}

input CreateItemInput {
  _id: String
  createdBy: String
  description: String
  name: String!
  parent: String!
  price: Float!
  quantity: Float
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Facility {
  _id: ID!
  name: String!
}

type Item {
  _id: ID!
  createdBy: User!
  description: String
  name: String!
  price: Float!
  quantity: Float
}

type ItemHistory {
  cancelled: Boolean!
  currentDate: DateTime
  dueDate: DateTime
  issueDate: DateTime
  issued: Boolean!
  itemId: Item!
  quantity: Float!
  status: Boolean!
  userId: User!
}

input ItemHistoryType {
  cancelled: Boolean!
  currentDate: DateTime
  dueDate: DateTime
  issueDate: DateTime
  issued: Boolean!
  itemId: ItemType!
  quantity: Float!
  status: Boolean!
  userId: UserInput!
}

input ItemType {
  _id: ID!
  createdBy: UserInput!
  description: String
  name: String!
  price: Float!
  quantity: Float
}

type Mutation {
  createCategory(createCategoryInput: CreateCategoryInput!, file: Upload!): Category!
  createFacility(createFacilityInput: CreateFacilityInput!, file: Upload!): Facility!
  createItem(createItemInput: CreateItemInput!, file: Upload!): Item!
  createItemHistory(createItemHistoryInput: CreateItemHistoryInput!): ItemHistory!
  createUser(createUserInput: CreateUserInput!): User!
  login(email: String!, password: String!): String!
  removeCategory(id: String!): Category!
  removeFacility(id: String!): Facility!
  removeItem(id: String!): Item!
  removeUser(_id: String!): User!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  updateFacility(updateFacilityInput: UpdateFacilityInput!): Facility!
  updateItem(updateItemInput: UpdateItemInput!): Item!
  updateItemHistory(updateItemHistoryInput: UpdateItemHistoryInput!): ItemHistory!
  updateUser(updateUserInput: UpdateUserInput!): User!
  uploadCategoryImage(file: Upload!, id: String!): String!
  uploadImage(file: Upload!, id: String!): Boolean!
  uploadItemImage(file: Upload!, id: String!): String!
}

type Query {
  category(id: String!): Category!
  currentUser: User!
  facilities: [Facility!]!
  facility(id: String!): Facility!
  getHello: String!
  item(id: String!): Item!
  itemActivityHistory(itemId: String!): [ItemHistory!]!
  user(_id: String!): User!
  userActivityHistory(userId: String!): [ItemHistory!]!
  users: [User!]!
}

input UpdateCategoryInput {
  _id: String!
  createdBy: UserInput
  description: String
  name: String
  parent: String
}

input UpdateFacilityInput {
  _id: String!
  name: String
}

input UpdateItemHistoryInput {
  cancelled: Boolean
  currentDate: DateTime
  dueDate: DateTime
  issueDate: DateTime
  issued: Boolean
  itemId: String
  quantity: Float
  status: Boolean
  userId: String
}

input UpdateItemInput {
  _id: String
  createdBy: String
  description: String
  name: String
  parent: String
  price: Float
  quantity: Float
}

input UpdateUserInput {
  _id: String!
  email: String
  name: String
  password: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _id: ID!
  email: String!
  name: String!
  password: String!
  token: String
}

input UserInput {
  _id: ID!
  email: String!
  name: String!
  password: String!
  token: String
}
